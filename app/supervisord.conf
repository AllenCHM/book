[unix_http_server]
file=/tmp/supervisor.sock   ; (the path to the socket file)

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket


[supervisord]
logfile=/var/log/banber/supervisord.log ; 日志文件
logfile_maxbytes=50MB                   ; 日志文件大小，超出会rotate
loglevel=debug
nodaemon=false                          ; 是否前台启动, FALSE,以daemon的方式启动


[program:app]
command=gunicorn -c /root/book/app/gunc.conf manage:app
directory=/root/book/app/
user=root
environment=MODE=PRODUCTION   #配置环境变量  TESTING PRODUCTION  DEVELOP
autostart=true                ; 随着supervisord的启动而启动
stopasgroup=true              ;父进程在接收到stop信号后，会把该信号传递给子进程，以免产生孤儿进程
autorestart=true              ; 自动重启。。当然要选上了
startretries=10               ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopsignal=KILL               ; 用来杀死进程的信号
stopwaitsecs=10               ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile =/var/log/banber/server.log  ;stdout日志文件，需要注意当指定目录不存在时无法正常启动，需要手动创建目录（supervisord会自动创建日志文件）
stdout_logfile_maxbytes=50MB  ; stdout 日志文件大小
stdout_logfile_backups=20     ; stdout 日志文件备份数








